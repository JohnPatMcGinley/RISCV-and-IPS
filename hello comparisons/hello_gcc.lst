
./hello:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 58 75             	add    %bl,0x75(%rax)
 36a:	f6 70 e5             	divb   -0x1b(%rax)
 36d:	d9 5d 6c             	fstps  0x6c(%rbp)
 370:	b9 35 9e 10 b5       	mov    $0xb5109e35,%ecx
 375:	8c d3                	mov    %ss,%ebx
 377:	1b 2b                	sbb    (%rbx),%ebp
 379:	7b 95                	jnp    310 <_init-0xcf0>
 37b:	5d                   	pop    %rbp

Disassembly of section .note.ABI-tag:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	0b 00                	or     (%rax),%eax
 3a6:	00 00                	add    %al,(%rax)
 3a8:	01 00                	add    %eax,(%rax)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	06                   	(bad)  
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 91 00 01 00 00    	add    %dl,0x100(%rcx)
 3b7:	00 0b                	add    %cl,(%rbx)
 3b9:	00 00                	add    %al,(%rax)
 3bb:	00 00                	add    %al,(%rax)
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 d0                	add    %dl,%al
 3c1:	65 ce                	gs (bad) 
 3c3:	6d                   	insl   (%dx),%es:(%rdi)
 3c4:	15                   	.byte 0x15
 3c5:	98                   	cwtl   
 3c6:	0c 43                	or     $0x43,%al

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	55                   	push   %rbp
 3e1:	00 00                	add    %al,(%rax)
 3e3:	00 12                	add    %dl,(%rdx)
	...
 3f5:	00 00                	add    %al,(%rax)
 3f7:	00 1d 01 00 00 12    	add    %bl,0x12000001(%rip)        # 120003fe <_end+0x11ffc2a6>
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 b9 00 00 00 12    	add    %bh,0x12000000(%rcx)
	...
 425:	00 00                	add    %al,(%rax)
 427:	00 a8 00 00 00 12    	add    %ch,0x12000000(%rax)
	...
 43d:	00 00                	add    %al,(%rax)
 43f:	00 f1                	add    %dh,%cl
 441:	00 00                	add    %al,(%rax)
 443:	00 12                	add    %dl,(%rdx)
	...
 455:	00 00                	add    %al,(%rax)
 457:	00 1f                	add    %bl,(%rdi)
 459:	00 00                	add    %al,(%rax)
 45b:	00 20                	add    %ah,(%rax)
	...
 46d:	00 00                	add    %al,(%rax)
 46f:	00 39                	add    %bh,(%rcx)
 471:	01 00                	add    %eax,(%rax)
 473:	00 12                	add    %dl,(%rdx)
	...
 485:	00 00                	add    %al,(%rax)
 487:	00 10                	add    %dl,(%rax)
 489:	00 00                	add    %al,(%rax)
 48b:	00 20                	add    %ah,(%rax)
	...
 49d:	00 00                	add    %al,(%rax)
 49f:	00 3b                	add    %bh,(%rbx)
 4a1:	00 00                	add    %al,(%rax)
 4a3:	00 20                	add    %ah,(%rax)
	...
 4b5:	00 00                	add    %al,(%rax)
 4b7:	00 90 00 00 00 12    	add    %dl,0x12000000(%rax)
	...
 4cd:	00 00                	add    %al,(%rax)
 4cf:	00 2a                	add    %ch,(%rdx)
 4d1:	01 00                	add    %eax,(%rax)
 4d3:	00 22                	add    %ah,(%rdx)
	...
 4e5:	00 00                	add    %al,(%rax)
 4e7:	00 09                	add    %cl,(%rcx)
 4e9:	01 00                	add    %eax,(%rax)
 4eb:	00 11                	add    %dl,(%rcx)
 4ed:	00 1a                	add    %bl,(%rdx)
 4ef:	00 40 40             	add    %al,0x40(%rax)
 4f2:	00 00                	add    %al,(%rax)
 4f4:	00 00                	add    %al,(%rax)
 4f6:	00 00                	add    %al,(%rax)
 4f8:	10 01                	adc    %al,(%rcx)
 4fa:	00 00                	add    %al,(%rax)
 4fc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynstr:

0000000000000500 <.dynstr>:
 500:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 504:	73 74                	jae    57a <_init-0xa86>
 506:	64 63 2b             	movslq %fs:(%rbx),%ebp
 509:	2b 2e                	sub    (%rsi),%ebp
 50b:	73 6f                	jae    57c <_init-0xa84>
 50d:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
 512:	67 6d                	insl   (%dx),%es:(%edi)
 514:	6f                   	outsl  %ds:(%rsi),(%dx)
 515:	6e                   	outsb  %ds:(%rsi),(%dx)
 516:	5f                   	pop    %rdi
 517:	73 74                	jae    58d <_init-0xa73>
 519:	61                   	(bad)  
 51a:	72 74                	jb     590 <_init-0xa70>
 51c:	5f                   	pop    %rdi
 51d:	5f                   	pop    %rdi
 51e:	00 5f 49             	add    %bl,0x49(%rdi)
 521:	54                   	push   %rsp
 522:	4d 5f                	rex.WRB pop %r15
 524:	64 65 72 65          	fs gs jb 58d <_init-0xa73>
 528:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 52f:	4d 
 530:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 532:	6f                   	outsl  %ds:(%rsi),(%dx)
 533:	6e                   	outsb  %ds:(%rsi),(%dx)
 534:	65 54                	gs push %rsp
 536:	61                   	(bad)  
 537:	62                   	(bad)  
 538:	6c                   	insb   (%dx),%es:(%rdi)
 539:	65 00 5f 49          	add    %bl,%gs:0x49(%rdi)
 53d:	54                   	push   %rsp
 53e:	4d 5f                	rex.WRB pop %r15
 540:	72 65                	jb     5a7 <_init-0xa59>
 542:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 549:	4d 
 54a:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 54c:	6f                   	outsl  %ds:(%rsi),(%dx)
 54d:	6e                   	outsb  %ds:(%rsi),(%dx)
 54e:	65 54                	gs push %rsp
 550:	61                   	(bad)  
 551:	62                   	(bad)  
 552:	6c                   	insb   (%dx),%es:(%rdi)
 553:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 557:	53                   	push   %rbx
 558:	74 34                	je     58e <_init-0xa72>
 55a:	65 6e                	outsb  %gs:(%rsi),(%dx)
 55c:	64 6c                	fs insb (%dx),%es:(%rdi)
 55e:	49 63 53 74          	movslq 0x74(%r11),%rdx
 562:	31 31                	xor    %esi,(%rcx)
 564:	63 68 61             	movslq 0x61(%rax),%ebp
 567:	72 5f                	jb     5c8 <_init-0xa38>
 569:	74 72                	je     5dd <_init-0xa23>
 56b:	61                   	(bad)  
 56c:	69 74 73 49 63 45 45 	imul   $0x52454563,0x49(%rbx,%rsi,2),%esi
 573:	52 
 574:	53                   	push   %rbx
 575:	74 31                	je     5a8 <_init-0xa58>
 577:	33 62 61             	xor    0x61(%rdx),%esp
 57a:	73 69                	jae    5e5 <_init-0xa1b>
 57c:	63 5f 6f             	movslq 0x6f(%rdi),%ebx
 57f:	73 74                	jae    5f5 <_init-0xa0b>
 581:	72 65                	jb     5e8 <_init-0xa18>
 583:	61                   	(bad)  
 584:	6d                   	insl   (%dx),%es:(%rdi)
 585:	49 54                	rex.WB push %r12
 587:	5f                   	pop    %rdi
 588:	54                   	push   %rsp
 589:	30 5f 45             	xor    %bl,0x45(%rdi)
 58c:	53                   	push   %rbx
 58d:	36 5f                	ss pop %rdi
 58f:	00 5f 5a             	add    %bl,0x5a(%rdi)
 592:	4e 53                	rex.WRX push %rbx
 594:	74 38                	je     5ce <_init-0xa32>
 596:	69 6f 73 5f 62 61 73 	imul   $0x7361625f,0x73(%rdi),%ebp
 59d:	65 34 49             	gs xor $0x49,%al
 5a0:	6e                   	outsb  %ds:(%rsi),(%dx)
 5a1:	69 74 44 31 45 76 00 	imul   $0x5f007645,0x31(%rsp,%rax,2),%esi
 5a8:	5f 
 5a9:	5a                   	pop    %rdx
 5aa:	4e 53                	rex.WRX push %rbx
 5ac:	6f                   	outsl  %ds:(%rsi),(%dx)
 5ad:	6c                   	insb   (%dx),%es:(%rdi)
 5ae:	73 45                	jae    5f5 <_init-0xa0b>
 5b0:	50                   	push   %rax
 5b1:	46 52                	rex.RX push %rdx
 5b3:	53                   	push   %rbx
 5b4:	6f                   	outsl  %ds:(%rsi),(%dx)
 5b5:	53                   	push   %rbx
 5b6:	5f                   	pop    %rdi
 5b7:	45 00 5f 5a          	add    %r11b,0x5a(%r15)
 5bb:	53                   	push   %rbx
 5bc:	74 6c                	je     62a <_init-0x9d6>
 5be:	73 49                	jae    609 <_init-0x9f7>
 5c0:	53                   	push   %rbx
 5c1:	74 31                	je     5f4 <_init-0xa0c>
 5c3:	31 63 68             	xor    %esp,0x68(%rbx)
 5c6:	61                   	(bad)  
 5c7:	72 5f                	jb     628 <_init-0x9d8>
 5c9:	74 72                	je     63d <_init-0x9c3>
 5cb:	61                   	(bad)  
 5cc:	69 74 73 49 63 45 45 	imul   $0x52454563,0x49(%rbx,%rsi,2),%esi
 5d3:	52 
 5d4:	53                   	push   %rbx
 5d5:	74 31                	je     608 <_init-0x9f8>
 5d7:	33 62 61             	xor    0x61(%rdx),%esp
 5da:	73 69                	jae    645 <_init-0x9bb>
 5dc:	63 5f 6f             	movslq 0x6f(%rdi),%ebx
 5df:	73 74                	jae    655 <_init-0x9ab>
 5e1:	72 65                	jb     648 <_init-0x9b8>
 5e3:	61                   	(bad)  
 5e4:	6d                   	insl   (%dx),%es:(%rdi)
 5e5:	49 63 54 5f 45       	movslq 0x45(%r15,%rbx,2),%rdx
 5ea:	53                   	push   %rbx
 5eb:	35 5f 50 4b 63       	xor    $0x634b505f,%eax
 5f0:	00 5f 5a             	add    %bl,0x5a(%rdi)
 5f3:	4e 53                	rex.WRX push %rbx
 5f5:	74 38                	je     62f <_init-0x9d1>
 5f7:	69 6f 73 5f 62 61 73 	imul   $0x7361625f,0x73(%rdi),%ebp
 5fe:	65 34 49             	gs xor $0x49,%al
 601:	6e                   	outsb  %ds:(%rsi),(%dx)
 602:	69 74 43 31 45 76 00 	imul   $0x5f007645,0x31(%rbx,%rax,2),%esi
 609:	5f 
 60a:	5a                   	pop    %rdx
 60b:	53                   	push   %rbx
 60c:	74 34                	je     642 <_init-0x9be>
 60e:	63 6f 75             	movslq 0x75(%rdi),%ebp
 611:	74 00                	je     613 <_init-0x9ed>
 613:	6c                   	insb   (%dx),%es:(%rdi)
 614:	69 62 63 2e 73 6f 2e 	imul   $0x2e6f732e,0x63(%rdx),%esp
 61b:	36 00 5f 5f          	add    %bl,%ss:0x5f(%rdi)
 61f:	63 78 61             	movslq 0x61(%rax),%edi
 622:	5f                   	pop    %rdi
 623:	61                   	(bad)  
 624:	74 65                	je     68b <_init-0x975>
 626:	78 69                	js     691 <_init-0x96f>
 628:	74 00                	je     62a <_init-0x9d6>
 62a:	5f                   	pop    %rdi
 62b:	5f                   	pop    %rdi
 62c:	63 78 61             	movslq 0x61(%rax),%edi
 62f:	5f                   	pop    %rdi
 630:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 636:	7a 65                	jp     69d <_init-0x963>
 638:	00 5f 5f             	add    %bl,0x5f(%rdi)
 63b:	6c                   	insb   (%dx),%es:(%rdi)
 63c:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 643:	72 74                	jb     6b9 <_init-0x947>
 645:	5f                   	pop    %rdi
 646:	6d                   	insl   (%dx),%es:(%rdi)
 647:	61                   	(bad)  
 648:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 64f:	43 58                	rex.XB pop %r8
 651:	58                   	pop    %rax
 652:	5f                   	pop    %rdi
 653:	33 2e                	xor    (%rsi),%ebp
 655:	34 00                	xor    $0x0,%al
 657:	47                   	rex.RXB
 658:	4c                   	rex.WR
 659:	49                   	rex.WB
 65a:	42                   	rex.X
 65b:	43 5f                	rex.XB pop %r15
 65d:	32 2e                	xor    (%rsi),%ch
 65f:	32 2e                	xor    (%rsi),%ch
 661:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000000664 <.gnu.version>:
 664:	00 00                	add    %al,(%rax)
 666:	03 00                	add    (%rax),%eax
 668:	02 00                	add    (%rax),%al
 66a:	03 00                	add    (%rax),%eax
 66c:	03 00                	add    (%rax),%eax
 66e:	03 00                	add    (%rax),%eax
 670:	00 00                	add    %al,(%rax)
 672:	02 00                	add    (%rax),%al
 674:	00 00                	add    %al,(%rax)
 676:	00 00                	add    %al,(%rax)
 678:	03 00                	add    (%rax),%eax
 67a:	02 00                	add    (%rax),%al
 67c:	03 00                	add    (%rax),%eax

Disassembly of section .gnu.version_r:

0000000000000680 <.gnu.version_r>:
 680:	01 00                	add    %eax,(%rax)
 682:	01 00                	add    %eax,(%rax)
 684:	01 00                	add    %eax,(%rax)
 686:	00 00                	add    %al,(%rax)
 688:	10 00                	adc    %al,(%rax)
 68a:	00 00                	add    %al,(%rax)
 68c:	20 00                	and    %al,(%rax)
 68e:	00 00                	add    %al,(%rax)
 690:	74 29                	je     6bb <_init-0x945>
 692:	92                   	xchg   %eax,%edx
 693:	08 00                	or     %al,(%rax)
 695:	00 03                	add    %al,(%rbx)
 697:	00 4b 01             	add    %cl,0x1(%rbx)
 69a:	00 00                	add    %al,(%rax)
 69c:	00 00                	add    %al,(%rax)
 69e:	00 00                	add    %al,(%rax)
 6a0:	01 00                	add    %eax,(%rax)
 6a2:	01 00                	add    %eax,(%rax)
 6a4:	13 01                	adc    (%rcx),%eax
 6a6:	00 00                	add    %al,(%rax)
 6a8:	10 00                	adc    %al,(%rax)
 6aa:	00 00                	add    %al,(%rax)
 6ac:	00 00                	add    %al,(%rax)
 6ae:	00 00                	add    %al,(%rax)
 6b0:	75 1a                	jne    6cc <_init-0x934>
 6b2:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 6b8:	57                   	push   %rdi
 6b9:	01 00                	add    %eax,(%rax)
 6bb:	00 00                	add    %al,(%rax)
 6bd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000000006c0 <.rela.dyn>:
 6c0:	78 3d                	js     6ff <_init-0x901>
 6c2:	00 00                	add    %al,(%rax)
 6c4:	00 00                	add    %al,(%rax)
 6c6:	00 00                	add    %al,(%rax)
 6c8:	08 00                	or     %al,(%rax)
 6ca:	00 00                	add    %al,(%rax)
 6cc:	00 00                	add    %al,(%rax)
 6ce:	00 00                	add    %al,(%rax)
 6d0:	a0 11 00 00 00 00 00 	movabs 0x8000000000000011,%al
 6d7:	00 80 
 6d9:	3d 00 00 00 00       	cmp    $0x0,%eax
 6de:	00 00                	add    %al,(%rax)
 6e0:	08 00                	or     %al,(%rax)
 6e2:	00 00                	add    %al,(%rax)
 6e4:	00 00                	add    %al,(%rax)
 6e6:	00 00                	add    %al,(%rax)
 6e8:	2d 12 00 00 00       	sub    $0x12,%eax
 6ed:	00 00                	add    %al,(%rax)
 6ef:	00 88 3d 00 00 00    	add    %cl,0x3d(%rax)
 6f5:	00 00                	add    %al,(%rax)
 6f7:	00 08                	add    %cl,(%rax)
 6f9:	00 00                	add    %al,(%rax)
 6fb:	00 00                	add    %al,(%rax)
 6fd:	00 00                	add    %al,(%rax)
 6ff:	00 60 11             	add    %ah,0x11(%rax)
 702:	00 00                	add    %al,(%rax)
 704:	00 00                	add    %al,(%rax)
 706:	00 00                	add    %al,(%rax)
 708:	08 40 00             	or     %al,0x0(%rax)
 70b:	00 00                	add    %al,(%rax)
 70d:	00 00                	add    %al,(%rax)
 70f:	00 08                	add    %cl,(%rax)
 711:	00 00                	add    %al,(%rax)
 713:	00 00                	add    %al,(%rax)
 715:	00 00                	add    %al,(%rax)
 717:	00 08                	add    %cl,(%rax)
 719:	40 00 00             	add    %al,(%rax)
 71c:	00 00                	add    %al,(%rax)
 71e:	00 00                	add    %al,(%rax)
 720:	c8 3f 00 00          	enterq $0x3f,$0x0
 724:	00 00                	add    %al,(%rax)
 726:	00 00                	add    %al,(%rax)
 728:	06                   	(bad)  
 729:	00 00                	add    %al,(%rax)
 72b:	00 0b                	add    %cl,(%rbx)
	...
 735:	00 00                	add    %al,(%rax)
 737:	00 d0                	add    %dl,%al
 739:	3f                   	(bad)  
 73a:	00 00                	add    %al,(%rax)
 73c:	00 00                	add    %al,(%rax)
 73e:	00 00                	add    %al,(%rax)
 740:	06                   	(bad)  
 741:	00 00                	add    %al,(%rax)
 743:	00 01                	add    %al,(%rcx)
	...
 74d:	00 00                	add    %al,(%rax)
 74f:	00 d8                	add    %bl,%al
 751:	3f                   	(bad)  
 752:	00 00                	add    %al,(%rax)
 754:	00 00                	add    %al,(%rax)
 756:	00 00                	add    %al,(%rax)
 758:	06                   	(bad)  
 759:	00 00                	add    %al,(%rax)
 75b:	00 06                	add    %al,(%rsi)
	...
 765:	00 00                	add    %al,(%rax)
 767:	00 e0                	add    %ah,%al
 769:	3f                   	(bad)  
 76a:	00 00                	add    %al,(%rax)
 76c:	00 00                	add    %al,(%rax)
 76e:	00 00                	add    %al,(%rax)
 770:	06                   	(bad)  
 771:	00 00                	add    %al,(%rax)
 773:	00 07                	add    %al,(%rdi)
	...
 77d:	00 00                	add    %al,(%rax)
 77f:	00 e8                	add    %ch,%al
 781:	3f                   	(bad)  
 782:	00 00                	add    %al,(%rax)
 784:	00 00                	add    %al,(%rax)
 786:	00 00                	add    %al,(%rax)
 788:	06                   	(bad)  
 789:	00 00                	add    %al,(%rax)
 78b:	00 08                	add    %cl,(%rax)
	...
 795:	00 00                	add    %al,(%rax)
 797:	00 f0                	add    %dh,%al
 799:	3f                   	(bad)  
 79a:	00 00                	add    %al,(%rax)
 79c:	00 00                	add    %al,(%rax)
 79e:	00 00                	add    %al,(%rax)
 7a0:	06                   	(bad)  
 7a1:	00 00                	add    %al,(%rax)
 7a3:	00 09                	add    %cl,(%rcx)
	...
 7ad:	00 00                	add    %al,(%rax)
 7af:	00 f8                	add    %bh,%al
 7b1:	3f                   	(bad)  
 7b2:	00 00                	add    %al,(%rax)
 7b4:	00 00                	add    %al,(%rax)
 7b6:	00 00                	add    %al,(%rax)
 7b8:	06                   	(bad)  
 7b9:	00 00                	add    %al,(%rax)
 7bb:	00 0a                	add    %cl,(%rdx)
	...
 7c5:	00 00                	add    %al,(%rax)
 7c7:	00 40 40             	add    %al,0x40(%rax)
 7ca:	00 00                	add    %al,(%rax)
 7cc:	00 00                	add    %al,(%rax)
 7ce:	00 00                	add    %al,(%rax)
 7d0:	05 00 00 00 0c       	add    $0xc000000,%eax
	...

Disassembly of section .rela.plt:

00000000000007e0 <.rela.plt>:
 7e0:	a8 3f                	test   $0x3f,%al
 7e2:	00 00                	add    %al,(%rax)
 7e4:	00 00                	add    %al,(%rax)
 7e6:	00 00                	add    %al,(%rax)
 7e8:	07                   	(bad)  
 7e9:	00 00                	add    %al,(%rax)
 7eb:	00 02                	add    %al,(%rdx)
	...
 7f5:	00 00                	add    %al,(%rax)
 7f7:	00 b0 3f 00 00 00    	add    %dh,0x3f(%rax)
 7fd:	00 00                	add    %al,(%rax)
 7ff:	00 07                	add    %al,(%rdi)
 801:	00 00                	add    %al,(%rax)
 803:	00 03                	add    %al,(%rbx)
	...
 80d:	00 00                	add    %al,(%rax)
 80f:	00 b8 3f 00 00 00    	add    %bh,0x3f(%rax)
 815:	00 00                	add    %al,(%rax)
 817:	00 07                	add    %al,(%rdi)
 819:	00 00                	add    %al,(%rax)
 81b:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 826:	00 00                	add    %al,(%rax)
 828:	c0 3f 00             	sarb   $0x0,(%rdi)
 82b:	00 00                	add    %al,(%rax)
 82d:	00 00                	add    %al,(%rax)
 82f:	00 07                	add    %al,(%rdi)
 831:	00 00                	add    %al,(%rax)
 833:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 839 <_init-0x7c7>
 839:	00 00                	add    %al,(%rax)
 83b:	00 00                	add    %al,(%rax)
 83d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 72 2f 00 00    	pushq  0x2f72(%rip)        # 3f98 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 73 2f 00 00 	bnd jmpq *0x2f73(%rip)        # 3fa0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop

Disassembly of section .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 4d 2f 00 00 	bnd jmpq *0x2f4d(%rip)        # 3fc8 <__cxa_finalize@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001080 <__cxa_atexit@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 1d 2f 00 00 	bnd jmpq *0x2f1d(%rip)        # 3fa8 <__cxa_atexit@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 15 2f 00 00 	bnd jmpq *0x2f15(%rip)        # 3fb0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010a0 <_ZNSolsEPFRSoS_E@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 0d 2f 00 00 	bnd jmpq *0x2f0d(%rip)        # 3fb8 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <_ZNSt8ios_base4InitC1Ev@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 05 2f 00 00 	bnd jmpq *0x2f05(%rip)        # 3fc0 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010c0 <_start>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	31 ed                	xor    %ebp,%ebp
    10c6:	49 89 d1             	mov    %rdx,%r9
    10c9:	5e                   	pop    %rsi
    10ca:	48 89 e2             	mov    %rsp,%rdx
    10cd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10d1:	50                   	push   %rax
    10d2:	54                   	push   %rsp
    10d3:	4c 8d 05 e6 01 00 00 	lea    0x1e6(%rip),%r8        # 12c0 <__libc_csu_fini>
    10da:	48 8d 0d 6f 01 00 00 	lea    0x16f(%rip),%rcx        # 1250 <__libc_csu_init>
    10e1:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 11a9 <main>
    10e8:	ff 15 f2 2e 00 00    	callq  *0x2ef2(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ee:	f4                   	hlt    
    10ef:	90                   	nop

00000000000010f0 <deregister_tm_clones>:
    10f0:	48 8d 3d 19 2f 00 00 	lea    0x2f19(%rip),%rdi        # 4010 <__TMC_END__>
    10f7:	48 8d 05 12 2f 00 00 	lea    0x2f12(%rip),%rax        # 4010 <__TMC_END__>
    10fe:	48 39 f8             	cmp    %rdi,%rax
    1101:	74 15                	je     1118 <deregister_tm_clones+0x28>
    1103:	48 8b 05 ce 2e 00 00 	mov    0x2ece(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    110a:	48 85 c0             	test   %rax,%rax
    110d:	74 09                	je     1118 <deregister_tm_clones+0x28>
    110f:	ff e0                	jmpq   *%rax
    1111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <register_tm_clones>:
    1120:	48 8d 3d e9 2e 00 00 	lea    0x2ee9(%rip),%rdi        # 4010 <__TMC_END__>
    1127:	48 8d 35 e2 2e 00 00 	lea    0x2ee2(%rip),%rsi        # 4010 <__TMC_END__>
    112e:	48 29 fe             	sub    %rdi,%rsi
    1131:	48 89 f0             	mov    %rsi,%rax
    1134:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1138:	48 c1 f8 03          	sar    $0x3,%rax
    113c:	48 01 c6             	add    %rax,%rsi
    113f:	48 d1 fe             	sar    %rsi
    1142:	74 14                	je     1158 <register_tm_clones+0x38>
    1144:	48 8b 05 a5 2e 00 00 	mov    0x2ea5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    114b:	48 85 c0             	test   %rax,%rax
    114e:	74 08                	je     1158 <register_tm_clones+0x38>
    1150:	ff e0                	jmpq   *%rax
    1152:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <__do_global_dtors_aux>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	80 3d e5 2f 00 00 00 	cmpb   $0x0,0x2fe5(%rip)        # 4150 <completed.8059>
    116b:	75 2b                	jne    1198 <__do_global_dtors_aux+0x38>
    116d:	55                   	push   %rbp
    116e:	48 83 3d 52 2e 00 00 	cmpq   $0x0,0x2e52(%rip)        # 3fc8 <__cxa_finalize@GLIBC_2.2.5>
    1175:	00 
    1176:	48 89 e5             	mov    %rsp,%rbp
    1179:	74 0c                	je     1187 <__do_global_dtors_aux+0x27>
    117b:	48 8b 3d 86 2e 00 00 	mov    0x2e86(%rip),%rdi        # 4008 <__dso_handle>
    1182:	e8 e9 fe ff ff       	callq  1070 <__cxa_finalize@plt>
    1187:	e8 64 ff ff ff       	callq  10f0 <deregister_tm_clones>
    118c:	c6 05 bd 2f 00 00 01 	movb   $0x1,0x2fbd(%rip)        # 4150 <completed.8059>
    1193:	5d                   	pop    %rbp
    1194:	c3                   	retq   
    1195:	0f 1f 00             	nopl   (%rax)
    1198:	c3                   	retq   
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <frame_dummy>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	e9 77 ff ff ff       	jmpq   1120 <register_tm_clones>

00000000000011a9 <main>:
    11a9:	f3 0f 1e fa          	endbr64 
    11ad:	55                   	push   %rbp
    11ae:	48 89 e5             	mov    %rsp,%rbp
    11b1:	48 8d 35 4d 0e 00 00 	lea    0xe4d(%rip),%rsi        # 2005 <_ZStL19piecewise_construct+0x1>
    11b8:	48 8d 3d 81 2e 00 00 	lea    0x2e81(%rip),%rdi        # 4040 <_ZSt4cout@@GLIBCXX_3.4>
    11bf:	e8 cc fe ff ff       	callq  1090 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    11c4:	48 89 c2             	mov    %rax,%rdx
    11c7:	48 8b 05 02 2e 00 00 	mov    0x2e02(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    11ce:	48 89 c6             	mov    %rax,%rsi
    11d1:	48 89 d7             	mov    %rdx,%rdi
    11d4:	e8 c7 fe ff ff       	callq  10a0 <_ZNSolsEPFRSoS_E@plt>
    11d9:	b8 00 00 00 00       	mov    $0x0,%eax
    11de:	5d                   	pop    %rbp
    11df:	c3                   	retq   

00000000000011e0 <_Z41__static_initialization_and_destruction_0ii>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	55                   	push   %rbp
    11e5:	48 89 e5             	mov    %rsp,%rbp
    11e8:	48 83 ec 10          	sub    $0x10,%rsp
    11ec:	89 7d fc             	mov    %edi,-0x4(%rbp)
    11ef:	89 75 f8             	mov    %esi,-0x8(%rbp)
    11f2:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    11f6:	75 32                	jne    122a <_Z41__static_initialization_and_destruction_0ii+0x4a>
    11f8:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    11ff:	75 29                	jne    122a <_Z41__static_initialization_and_destruction_0ii+0x4a>
    1201:	48 8d 3d 49 2f 00 00 	lea    0x2f49(%rip),%rdi        # 4151 <_ZStL8__ioinit>
    1208:	e8 a3 fe ff ff       	callq  10b0 <_ZNSt8ios_base4InitC1Ev@plt>
    120d:	48 8d 15 f4 2d 00 00 	lea    0x2df4(%rip),%rdx        # 4008 <__dso_handle>
    1214:	48 8d 35 36 2f 00 00 	lea    0x2f36(%rip),%rsi        # 4151 <_ZStL8__ioinit>
    121b:	48 8b 05 d6 2d 00 00 	mov    0x2dd6(%rip),%rax        # 3ff8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    1222:	48 89 c7             	mov    %rax,%rdi
    1225:	e8 56 fe ff ff       	callq  1080 <__cxa_atexit@plt>
    122a:	90                   	nop
    122b:	c9                   	leaveq 
    122c:	c3                   	retq   

000000000000122d <_GLOBAL__sub_I_main>:
    122d:	f3 0f 1e fa          	endbr64 
    1231:	55                   	push   %rbp
    1232:	48 89 e5             	mov    %rsp,%rbp
    1235:	be ff ff 00 00       	mov    $0xffff,%esi
    123a:	bf 01 00 00 00       	mov    $0x1,%edi
    123f:	e8 9c ff ff ff       	callq  11e0 <_Z41__static_initialization_and_destruction_0ii>
    1244:	5d                   	pop    %rbp
    1245:	c3                   	retq   
    1246:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    124d:	00 00 00 

0000000000001250 <__libc_csu_init>:
    1250:	f3 0f 1e fa          	endbr64 
    1254:	41 57                	push   %r15
    1256:	4c 8d 3d 1b 2b 00 00 	lea    0x2b1b(%rip),%r15        # 3d78 <__frame_dummy_init_array_entry>
    125d:	41 56                	push   %r14
    125f:	49 89 d6             	mov    %rdx,%r14
    1262:	41 55                	push   %r13
    1264:	49 89 f5             	mov    %rsi,%r13
    1267:	41 54                	push   %r12
    1269:	41 89 fc             	mov    %edi,%r12d
    126c:	55                   	push   %rbp
    126d:	48 8d 2d 14 2b 00 00 	lea    0x2b14(%rip),%rbp        # 3d88 <__do_global_dtors_aux_fini_array_entry>
    1274:	53                   	push   %rbx
    1275:	4c 29 fd             	sub    %r15,%rbp
    1278:	48 83 ec 08          	sub    $0x8,%rsp
    127c:	e8 7f fd ff ff       	callq  1000 <_init>
    1281:	48 c1 fd 03          	sar    $0x3,%rbp
    1285:	74 1f                	je     12a6 <__libc_csu_init+0x56>
    1287:	31 db                	xor    %ebx,%ebx
    1289:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1290:	4c 89 f2             	mov    %r14,%rdx
    1293:	4c 89 ee             	mov    %r13,%rsi
    1296:	44 89 e7             	mov    %r12d,%edi
    1299:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    129d:	48 83 c3 01          	add    $0x1,%rbx
    12a1:	48 39 dd             	cmp    %rbx,%rbp
    12a4:	75 ea                	jne    1290 <__libc_csu_init+0x40>
    12a6:	48 83 c4 08          	add    $0x8,%rsp
    12aa:	5b                   	pop    %rbx
    12ab:	5d                   	pop    %rbp
    12ac:	41 5c                	pop    %r12
    12ae:	41 5d                	pop    %r13
    12b0:	41 5e                	pop    %r14
    12b2:	41 5f                	pop    %r15
    12b4:	c3                   	retq   
    12b5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    12bc:	00 00 00 00 

00000000000012c0 <__libc_csu_fini>:
    12c0:	f3 0f 1e fa          	endbr64 
    12c4:	c3                   	retq   

Disassembly of section .fini:

00000000000012c8 <_fini>:
    12c8:	f3 0f 1e fa          	endbr64 
    12cc:	48 83 ec 08          	sub    $0x8,%rsp
    12d0:	48 83 c4 08          	add    $0x8,%rsp
    12d4:	c3                   	retq   

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al

0000000000002004 <_ZStL19piecewise_construct>:
    2004:	00 48 65             	add    %cl,0x65(%rax)
    2007:	6c                   	insb   (%dx),%es:(%rdi)
    2008:	6c                   	insb   (%dx),%es:(%rdi)
    2009:	6f                   	outsl  %ds:(%rsi),(%dx)
    200a:	20 57 6f             	and    %dl,0x6f(%rdi)
    200d:	72 6c                	jb     207b <__GNU_EH_FRAME_HDR+0x63>
    200f:	64 20 2d 20 4a 6f 68 	and    %ch,%fs:0x686f4a20(%rip)        # 686f6a36 <_end+0x686f28de>
    2016:	6e                   	outsb  %ds:(%rsi),(%dx)
	...

Disassembly of section .eh_frame_hdr:

0000000000002018 <__GNU_EH_FRAME_HDR>:
    2018:	01 1b                	add    %ebx,(%rbx)
    201a:	03 3b                	add    (%rbx),%edi
    201c:	54                   	push   %rsp
    201d:	00 00                	add    %al,(%rax)
    201f:	00 09                	add    %cl,(%rcx)
    2021:	00 00                	add    %al,(%rax)
    2023:	00 08                	add    %cl,(%rax)
    2025:	f0 ff                	lock (bad) 
    2027:	ff 88 00 00 00 58    	decl   0x58000000(%rax)
    202d:	f0 ff                	lock (bad) 
    202f:	ff b0 00 00 00 68    	pushq  0x68000000(%rax)
    2035:	f0 ff                	lock (bad) 
    2037:	ff c8                	dec    %eax
    2039:	00 00                	add    %al,(%rax)
    203b:	00 a8 f0 ff ff 70    	add    %ch,0x70fffff0(%rax)
    2041:	00 00                	add    %al,(%rax)
    2043:	00 91 f1 ff ff e0    	add    %dl,-0x1f00000f(%rcx)
    2049:	00 00                	add    %al,(%rax)
    204b:	00 c8                	add    %cl,%al
    204d:	f1                   	icebp  
    204e:	ff                   	(bad)  
    204f:	ff 00                	incl   (%rax)
    2051:	01 00                	add    %eax,(%rax)
    2053:	00 15 f2 ff ff 20    	add    %dl,0x20fffff2(%rip)        # 2100204b <_end+0x20ffdef3>
    2059:	01 00                	add    %eax,(%rax)
    205b:	00 38                	add    %bh,(%rax)
    205d:	f2 ff                	repnz (bad) 
    205f:	ff 40 01             	incl   0x1(%rax)
    2062:	00 00                	add    %al,(%rax)
    2064:	a8 f2                	test   $0xf2,%al
    2066:	ff                   	(bad)  
    2067:	ff                   	.byte 0xff
    2068:	88 01                	mov    %al,(%rcx)
	...

Disassembly of section .eh_frame:

0000000000002070 <__FRAME_END__-0x144>:
    2070:	14 00                	adc    $0x0,%al
    2072:	00 00                	add    %al,(%rax)
    2074:	00 00                	add    %al,(%rax)
    2076:	00 00                	add    %al,(%rax)
    2078:	01 7a 52             	add    %edi,0x52(%rdx)
    207b:	00 01                	add    %al,(%rcx)
    207d:	78 10                	js     208f <__GNU_EH_FRAME_HDR+0x77>
    207f:	01 1b                	add    %ebx,(%rbx)
    2081:	0c 07                	or     $0x7,%al
    2083:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    2089:	00 00                	add    %al,(%rax)
    208b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    208e:	00 00                	add    %al,(%rax)
    2090:	30 f0                	xor    %dh,%al
    2092:	ff                   	(bad)  
    2093:	ff 2f                	ljmp   *(%rdi)
    2095:	00 00                	add    %al,(%rax)
    2097:	00 00                	add    %al,(%rax)
    2099:	44 07                	rex.R (bad) 
    209b:	10 00                	adc    %al,(%rax)
    209d:	00 00                	add    %al,(%rax)
    209f:	00 24 00             	add    %ah,(%rax,%rax,1)
    20a2:	00 00                	add    %al,(%rax)
    20a4:	34 00                	xor    $0x0,%al
    20a6:	00 00                	add    %al,(%rax)
    20a8:	78 ef                	js     2099 <__GNU_EH_FRAME_HDR+0x81>
    20aa:	ff                   	(bad)  
    20ab:	ff 50 00             	callq  *0x0(%rax)
    20ae:	00 00                	add    %al,(%rax)
    20b0:	00 0e                	add    %cl,(%rsi)
    20b2:	10 46 0e             	adc    %al,0xe(%rsi)
    20b5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    20b8:	0b 77 08             	or     0x8(%rdi),%esi
    20bb:	80 00 3f             	addb   $0x3f,(%rax)
    20be:	1a 3a                	sbb    (%rdx),%bh
    20c0:	2a 33                	sub    (%rbx),%dh
    20c2:	24 22                	and    $0x22,%al
    20c4:	00 00                	add    %al,(%rax)
    20c6:	00 00                	add    %al,(%rax)
    20c8:	14 00                	adc    $0x0,%al
    20ca:	00 00                	add    %al,(%rax)
    20cc:	5c                   	pop    %rsp
    20cd:	00 00                	add    %al,(%rax)
    20cf:	00 a0 ef ff ff 10    	add    %ah,0x10ffffef(%rax)
	...
    20dd:	00 00                	add    %al,(%rax)
    20df:	00 14 00             	add    %dl,(%rax,%rax,1)
    20e2:	00 00                	add    %al,(%rax)
    20e4:	74 00                	je     20e6 <__GNU_EH_FRAME_HDR+0xce>
    20e6:	00 00                	add    %al,(%rax)
    20e8:	98                   	cwtl   
    20e9:	ef                   	out    %eax,(%dx)
    20ea:	ff                   	(bad)  
    20eb:	ff 40 00             	incl   0x0(%rax)
	...
    20f6:	00 00                	add    %al,(%rax)
    20f8:	1c 00                	sbb    $0x0,%al
    20fa:	00 00                	add    %al,(%rax)
    20fc:	8c 00                	mov    %es,(%rax)
    20fe:	00 00                	add    %al,(%rax)
    2100:	a9 f0 ff ff 37       	test   $0x37fffff0,%eax
    2105:	00 00                	add    %al,(%rax)
    2107:	00 00                	add    %al,(%rax)
    2109:	45 0e                	rex.RB (bad) 
    210b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2111:	6e                   	outsb  %ds:(%rsi),(%dx)
    2112:	0c 07                	or     $0x7,%al
    2114:	08 00                	or     %al,(%rax)
    2116:	00 00                	add    %al,(%rax)
    2118:	1c 00                	sbb    $0x0,%al
    211a:	00 00                	add    %al,(%rax)
    211c:	ac                   	lods   %ds:(%rsi),%al
    211d:	00 00                	add    %al,(%rax)
    211f:	00 c0                	add    %al,%al
    2121:	f0 ff                	lock (bad) 
    2123:	ff 4d 00             	decl   0x0(%rbp)
    2126:	00 00                	add    %al,(%rax)
    2128:	00 45 0e             	add    %al,0xe(%rbp)
    212b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2131:	02 44 0c 07          	add    0x7(%rsp,%rcx,1),%al
    2135:	08 00                	or     %al,(%rax)
    2137:	00 1c 00             	add    %bl,(%rax,%rax,1)
    213a:	00 00                	add    %al,(%rax)
    213c:	cc                   	int3   
    213d:	00 00                	add    %al,(%rax)
    213f:	00 ed                	add    %ch,%ch
    2141:	f0 ff                	lock (bad) 
    2143:	ff 19                	lcall  *(%rcx)
    2145:	00 00                	add    %al,(%rax)
    2147:	00 00                	add    %al,(%rax)
    2149:	45 0e                	rex.RB (bad) 
    214b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2151:	50                   	push   %rax
    2152:	0c 07                	or     $0x7,%al
    2154:	08 00                	or     %al,(%rax)
    2156:	00 00                	add    %al,(%rax)
    2158:	44 00 00             	add    %r8b,(%rax)
    215b:	00 ec                	add    %ch,%ah
    215d:	00 00                	add    %al,(%rax)
    215f:	00 f0                	add    %dh,%al
    2161:	f0 ff                	lock (bad) 
    2163:	ff 65 00             	jmpq   *0x0(%rbp)
    2166:	00 00                	add    %al,(%rax)
    2168:	00 46 0e             	add    %al,0xe(%rsi)
    216b:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2171:	8e 03                	mov    (%rbx),%es
    2173:	45 0e                	rex.RB (bad) 
    2175:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    217b:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86302fc5 <_end+0xffffffff862fee6d>
    2181:	06                   	(bad)  
    2182:	48 0e                	rex.W (bad) 
    2184:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    218a:	6e                   	outsb  %ds:(%rsi),(%dx)
    218b:	0e                   	(bad)  
    218c:	38 41 0e             	cmp    %al,0xe(%rcx)
    218f:	30 41 0e             	xor    %al,0xe(%rcx)
    2192:	28 42 0e             	sub    %al,0xe(%rdx)
    2195:	20 42 0e             	and    %al,0xe(%rdx)
    2198:	18 42 0e             	sbb    %al,0xe(%rdx)
    219b:	10 42 0e             	adc    %al,0xe(%rdx)
    219e:	08 00                	or     %al,(%rax)
    21a0:	10 00                	adc    %al,(%rax)
    21a2:	00 00                	add    %al,(%rax)
    21a4:	34 01                	xor    $0x1,%al
    21a6:	00 00                	add    %al,(%rax)
    21a8:	18 f1                	sbb    %dh,%cl
    21aa:	ff                   	(bad)  
    21ab:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 21b1 <__GNU_EH_FRAME_HDR+0x199>
    21b1:	00 00                	add    %al,(%rax)
	...

00000000000021b4 <__FRAME_END__>:
    21b4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003d78 <__frame_dummy_init_array_entry>:
    3d78:	a0 11 00 00 00 00 00 	movabs 0x2d00000000000011,%al
    3d7f:	00 2d 
    3d81:	12 00                	adc    (%rax),%al
    3d83:	00 00                	add    %al,(%rax)
    3d85:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003d88 <__do_global_dtors_aux_fini_array_entry>:
    3d88:	60                   	(bad)  
    3d89:	11 00                	adc    %eax,(%rax)
    3d8b:	00 00                	add    %al,(%rax)
    3d8d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003d90 <_DYNAMIC>:
    3d90:	01 00                	add    %eax,(%rax)
    3d92:	00 00                	add    %al,(%rax)
    3d94:	00 00                	add    %al,(%rax)
    3d96:	00 00                	add    %al,(%rax)
    3d98:	01 00                	add    %eax,(%rax)
    3d9a:	00 00                	add    %al,(%rax)
    3d9c:	00 00                	add    %al,(%rax)
    3d9e:	00 00                	add    %al,(%rax)
    3da0:	01 00                	add    %eax,(%rax)
    3da2:	00 00                	add    %al,(%rax)
    3da4:	00 00                	add    %al,(%rax)
    3da6:	00 00                	add    %al,(%rax)
    3da8:	13 01                	adc    (%rcx),%eax
    3daa:	00 00                	add    %al,(%rax)
    3dac:	00 00                	add    %al,(%rax)
    3dae:	00 00                	add    %al,(%rax)
    3db0:	0c 00                	or     $0x0,%al
    3db2:	00 00                	add    %al,(%rax)
    3db4:	00 00                	add    %al,(%rax)
    3db6:	00 00                	add    %al,(%rax)
    3db8:	00 10                	add    %dl,(%rax)
    3dba:	00 00                	add    %al,(%rax)
    3dbc:	00 00                	add    %al,(%rax)
    3dbe:	00 00                	add    %al,(%rax)
    3dc0:	0d 00 00 00 00       	or     $0x0,%eax
    3dc5:	00 00                	add    %al,(%rax)
    3dc7:	00 c8                	add    %cl,%al
    3dc9:	12 00                	adc    (%rax),%al
    3dcb:	00 00                	add    %al,(%rax)
    3dcd:	00 00                	add    %al,(%rax)
    3dcf:	00 19                	add    %bl,(%rcx)
    3dd1:	00 00                	add    %al,(%rax)
    3dd3:	00 00                	add    %al,(%rax)
    3dd5:	00 00                	add    %al,(%rax)
    3dd7:	00 78 3d             	add    %bh,0x3d(%rax)
    3dda:	00 00                	add    %al,(%rax)
    3ddc:	00 00                	add    %al,(%rax)
    3dde:	00 00                	add    %al,(%rax)
    3de0:	1b 00                	sbb    (%rax),%eax
    3de2:	00 00                	add    %al,(%rax)
    3de4:	00 00                	add    %al,(%rax)
    3de6:	00 00                	add    %al,(%rax)
    3de8:	10 00                	adc    %al,(%rax)
    3dea:	00 00                	add    %al,(%rax)
    3dec:	00 00                	add    %al,(%rax)
    3dee:	00 00                	add    %al,(%rax)
    3df0:	1a 00                	sbb    (%rax),%al
    3df2:	00 00                	add    %al,(%rax)
    3df4:	00 00                	add    %al,(%rax)
    3df6:	00 00                	add    %al,(%rax)
    3df8:	88 3d 00 00 00 00    	mov    %bh,0x0(%rip)        # 3dfe <_DYNAMIC+0x6e>
    3dfe:	00 00                	add    %al,(%rax)
    3e00:	1c 00                	sbb    $0x0,%al
    3e02:	00 00                	add    %al,(%rax)
    3e04:	00 00                	add    %al,(%rax)
    3e06:	00 00                	add    %al,(%rax)
    3e08:	08 00                	or     %al,(%rax)
    3e0a:	00 00                	add    %al,(%rax)
    3e0c:	00 00                	add    %al,(%rax)
    3e0e:	00 00                	add    %al,(%rax)
    3e10:	f5                   	cmc    
    3e11:	fe                   	(bad)  
    3e12:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e15:	00 00                	add    %al,(%rax)
    3e17:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e25 <_DYNAMIC+0x95>
    3e25:	00 00                	add    %al,(%rax)
    3e27:	00 00                	add    %al,(%rax)
    3e29:	05 00 00 00 00       	add    $0x0,%eax
    3e2e:	00 00                	add    %al,(%rax)
    3e30:	06                   	(bad)  
    3e31:	00 00                	add    %al,(%rax)
    3e33:	00 00                	add    %al,(%rax)
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 c8                	add    %cl,%al
    3e39:	03 00                	add    (%rax),%eax
    3e3b:	00 00                	add    %al,(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 0a                	add    %cl,(%rdx)
    3e41:	00 00                	add    %al,(%rax)
    3e43:	00 00                	add    %al,(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 63 01             	add    %ah,0x1(%rbx)
    3e4a:	00 00                	add    %al,(%rax)
    3e4c:	00 00                	add    %al,(%rax)
    3e4e:	00 00                	add    %al,(%rax)
    3e50:	0b 00                	or     (%rax),%eax
    3e52:	00 00                	add    %al,(%rax)
    3e54:	00 00                	add    %al,(%rax)
    3e56:	00 00                	add    %al,(%rax)
    3e58:	18 00                	sbb    %al,(%rax)
    3e5a:	00 00                	add    %al,(%rax)
    3e5c:	00 00                	add    %al,(%rax)
    3e5e:	00 00                	add    %al,(%rax)
    3e60:	15 00 00 00 00       	adc    $0x0,%eax
	...
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 03                	add    %al,(%rbx)
    3e71:	00 00                	add    %al,(%rax)
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 90 3f 00 00 00    	add    %dl,0x3f(%rax)
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 02                	add    %al,(%rdx)
    3e81:	00 00                	add    %al,(%rax)
    3e83:	00 00                	add    %al,(%rax)
    3e85:	00 00                	add    %al,(%rax)
    3e87:	00 60 00             	add    %ah,0x0(%rax)
    3e8a:	00 00                	add    %al,(%rax)
    3e8c:	00 00                	add    %al,(%rax)
    3e8e:	00 00                	add    %al,(%rax)
    3e90:	14 00                	adc    $0x0,%al
    3e92:	00 00                	add    %al,(%rax)
    3e94:	00 00                	add    %al,(%rax)
    3e96:	00 00                	add    %al,(%rax)
    3e98:	07                   	(bad)  
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 17                	add    %dl,(%rdi)
    3ea1:	00 00                	add    %al,(%rax)
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 e0                	add    %ah,%al
    3ea9:	07                   	(bad)  
    3eaa:	00 00                	add    %al,(%rax)
    3eac:	00 00                	add    %al,(%rax)
    3eae:	00 00                	add    %al,(%rax)
    3eb0:	07                   	(bad)  
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 c0                	add    %al,%al
    3eb9:	06                   	(bad)  
    3eba:	00 00                	add    %al,(%rax)
    3ebc:	00 00                	add    %al,(%rax)
    3ebe:	00 00                	add    %al,(%rax)
    3ec0:	08 00                	or     %al,(%rax)
    3ec2:	00 00                	add    %al,(%rax)
    3ec4:	00 00                	add    %al,(%rax)
    3ec6:	00 00                	add    %al,(%rax)
    3ec8:	20 01                	and    %al,(%rcx)
    3eca:	00 00                	add    %al,(%rax)
    3ecc:	00 00                	add    %al,(%rax)
    3ece:	00 00                	add    %al,(%rax)
    3ed0:	09 00                	or     %eax,(%rax)
    3ed2:	00 00                	add    %al,(%rax)
    3ed4:	00 00                	add    %al,(%rax)
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	18 00                	sbb    %al,(%rax)
    3eda:	00 00                	add    %al,(%rax)
    3edc:	00 00                	add    %al,(%rax)
    3ede:	00 00                	add    %al,(%rax)
    3ee0:	1e                   	(bad)  
    3ee1:	00 00                	add    %al,(%rax)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 08                	add    %cl,(%rax)
    3ee9:	00 00                	add    %al,(%rax)
    3eeb:	00 00                	add    %al,(%rax)
    3eed:	00 00                	add    %al,(%rax)
    3eef:	00 fb                	add    %bh,%bl
    3ef1:	ff                   	(bad)  
    3ef2:	ff 6f 00             	ljmp   *0x0(%rdi)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 01                	add    %al,(%rcx)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	08 00                	or     %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 fe                	add    %bh,%dh
    3f01:	ff                   	(bad)  
    3f02:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 80 06 00 00 00    	add    %al,0x6(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 ff                	add    %bh,%bh
    3f11:	ff                   	(bad)  
    3f12:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 02                	add    %al,(%rdx)
    3f19:	00 00                	add    %al,(%rax)
    3f1b:	00 00                	add    %al,(%rax)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 f0                	add    %dh,%al
    3f21:	ff                   	(bad)  
    3f22:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 64 06 00          	add    %ah,0x0(%rsi,%rax,1)
    3f2b:	00 00                	add    %al,(%rax)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 f9                	add    %bh,%cl
    3f31:	ff                   	(bad)  
    3f32:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 04 00             	add    %al,(%rax,%rax,1)
	...

Disassembly of section .got:

0000000000003f90 <_GLOBAL_OFFSET_TABLE_>:
    3f90:	90                   	nop
    3f91:	3d 00 00 00 00       	cmp    $0x0,%eax
	...
    3fa6:	00 00                	add    %al,(%rax)
    3fa8:	30 10                	xor    %dl,(%rax)
    3faa:	00 00                	add    %al,(%rax)
    3fac:	00 00                	add    %al,(%rax)
    3fae:	00 00                	add    %al,(%rax)
    3fb0:	40 10 00             	adc    %al,(%rax)
    3fb3:	00 00                	add    %al,(%rax)
    3fb5:	00 00                	add    %al,(%rax)
    3fb7:	00 50 10             	add    %dl,0x10(%rax)
    3fba:	00 00                	add    %al,(%rax)
    3fbc:	00 00                	add    %al,(%rax)
    3fbe:	00 00                	add    %al,(%rax)
    3fc0:	60                   	(bad)  
    3fc1:	10 00                	adc    %al,(%rax)
	...

Disassembly of section .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000004040 <_ZSt4cout@@GLIBCXX_3.4>:
	...

0000000000004150 <completed.8059>:
	...

0000000000004151 <_ZStL8__ioinit>:
    4151:	00 00                	add    %al,(%rax)
    4153:	00 00                	add    %al,(%rax)
    4155:	00 00                	add    %al,(%rax)
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  11:	30 2d 31 30 75 62    	xor    %ch,0x62753031(%rip)        # 62753048 <_end+0x6274eef0>
  17:	75 6e                	jne    87 <_init-0xf79>
  19:	74 75                	je     90 <_init-0xf70>
  1b:	32 29                	xor    (%rcx),%ch
  1d:	20 39                	and    %bh,(%rcx)
  1f:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  22:	30 00                	xor    %al,(%rax)
